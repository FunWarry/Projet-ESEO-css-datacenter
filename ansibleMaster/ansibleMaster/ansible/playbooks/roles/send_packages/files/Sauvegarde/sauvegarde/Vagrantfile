$script_ssh = <<-SCRIPT
sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config    
sleep 3
service ssh restart
echo "$(cat /vagrant/files/id_rsa.pub)" >> /home/vagrant/.ssh/authorized_keys
SCRIPT

$script_route = <<-SCRIPT
ip route del default
ip route add default via 192.168.236.1 dev enp0s8

sudo echo "search .
nameserver 192.168.238.10" > /etc/resolv.conf
SCRIPT

Vagrant.configure("2") do |config|

	# Number of nodes to provision
	numNodesSauv = 1
	numNodesProxy = 1
	numNodesClient = 1
 
	# IP Address Base for private network
	ipAddrPrefix1 = "192.168.236."
	
 
	# Define Number of RAM for each node
	config.vm.provider "virtualbox" do |v|
		v.customize ["modifyvm", :id, "--groups", "/projet"]
		v.customize ["modifyvm", :id, "--cpus", "1"]
		v.customize ["modifyvm", :id, "--memory", 512]
		v.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
		v.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
	end

	 # Download the initial box from this url
 
	# Provision Config for each of the nodes proxy
	1.upto(numNodesProxy) do |num|
		nodeName = ("proxy" + num.to_s).to_sym
		config.vm.define nodeName do |node|
			node.vm.host_name = nodeName
			node.vm.box = "chavinje/fr-book-64"
			node.vm.network :public_network, bridge:"eno1", ip: ipAddrPrefix1 + (4).to_s
			node.vm.provider "virtualbox" do |v|
				v.name = "proxy" + num.to_s
			end

			node.vm.provision "shell", inline: $script_ssh
			node.vm.provision "shell", path: "scripts/config_ssh.sh"
			node.vm.provision "shell", path: "scripts/config_sys.sh"
			node.vm.provision "shell", inline: $script_route
		end
	end
	
	# Provision Config for each of the nodes client
	1.upto(numNodesClient) do |num|
		nodeName = ("client" + num.to_s).to_sym
		config.vm.define nodeName do |node|
			node.vm.host_name = nodeName
			node.vm.box = "chavinje/fr-book-64"
			node.vm.network :public_network, bridge:"eno1", ip: ipAddrPrefix1 + (5).to_s
			node.vm.provider "virtualbox" do |v|
				v.name = "client" + num.to_s
			end

			node.vm.provision "shell", inline: $script_ssh
			node.vm.provision "shell", path: "scripts/config_ssh.sh"
			node.vm.provision "shell", path: "scripts/config_sys.sh"
			node.vm.provision "shell", inline: $script_route
		end
	end
 
	 # Provision Config for each of the nodes Sauv
	1.upto(numNodesSauv) do |num|
		nodeName = ("sauvegarde" + num.to_s).to_sym
		config.vm.define nodeName do |node|
			node.vm.host_name = nodeName
			node.vm.box = "chavinje/fr-book-64"
			node.vm.network :public_network, bridge:"eno1", ip: ipAddrPrefix1 + (3).to_s
			node.vm.provider "virtualbox" do |v|
				v.name = "sauvegarde" + num.to_s
			end

			node.vm.provision "shell", inline: $script_ssh
			node.vm.provision "shell", path: "scripts/config_ssh.sh"
			node.vm.provision "shell", path: "scripts/config_sys.sh"
			node.vm.provision "shell", inline: $script_route
			node.vm.provision "shell", path: "scripts/send_keys.sh"
		end
	end
end
